From 638c23a83382a1a921fe88dfc9697bfd53df2d04 Mon Sep 17 00:00:00 2001
From: kelson8 <kelson@kelsoncraft.net>
Date: Sun, 16 Feb 2025 15:01:56 -0500
Subject: [PATCH 33/42] Add vehicle spawner from debug_functions into
 vehicle_functions. Slightly modify the code for it and remove vehicle spawner
 from custom_cheats. Move vehicle code to the bottom of debug_functions and
 fix some comments. Add test for invincible cheat, this is incomplete and
 broken. Move gxt files into ViceExtended/TEXT folder.

---
 src/extras/debug/debug_functions.cpp       |  25 ++-
 src/extras/functions/vehicle_functions.cpp |  65 ++++++--
 src/extras/functions/vehicle_functions.h   |   3 +-
 src/extras/test/cheats/custom_cheats.cpp   | 174 ++++-----------------
 src/peds/Ped.cpp                           |   6 +
 src/peds/PedFight.cpp                      |   8 +
 src/peds/PlayerPed.h                       |   6 +
 src/text/Text.cpp                          |   5 +
 8 files changed, 129 insertions(+), 163 deletions(-)

diff --git a/src/extras/debug/debug_functions.cpp b/src/extras/debug/debug_functions.cpp
index e40a9ef5..437f4a49 100644
--- a/src/extras/debug/debug_functions.cpp
+++ b/src/extras/debug/debug_functions.cpp
@@ -63,6 +63,7 @@
 #include "extras/imgui_test.h"
 #include "extras/test/cheats/custom_cheats.h"
 
+#include "extras/functions/vehicle_functions.h"
 
 //
 
@@ -458,18 +459,19 @@ DebugMenuPopulate(void)
 		DebugMenuAddCmd("Cheats", "Invincible Vehicle", customCheats->InvincibleVehicleCheat);
 		DebugMenuAddCmd("Cheats", "Suicide", SuicideCheat);
 
-		// New menu test
-		DebugMenuAddCmd("Vehicle", "Lock Doors", CustomCheats::LockDoors);
-		DebugMenuAddCmd("Vehicle", "Unlock Doors", CustomCheats::UnlockDoors);
+
 		// This adds another menu to it, i didn't know it was that simple.
 		// DebugMenuAddCmd("Test", "Suicide", SuicideCheat);
 
-		// Allow all cars to be repaired in the garages, incomplete.
-		// DebugMenuAddCmd("Cheats", "Toggle all vehicle repair", ToggleRespray);
+		// Allow all cars to be repaired in the garages.
+		// This allows emergency vehicles such as cop cars, and ambulances being repaired
+		// at a Pay N Spray
 		DebugMenuAddCmd("Cheats", "Toggle all vehicle repair", CGarages::ToggleRespray);
 
-		// Spawn a PCJ 600, test with my own code.
-		DebugMenuAddCmd("Cheats", "Spawn PCJ 600", CustomCheats::SpawnCarTestCheat);
+		// Spawn a vehicle that is set under the SpawnCarTestCheat function
+		// I have modified the original debug menu function for this.
+		// TODO Add a toggle option and names for the vehicles, kind of like the original debug menu function
+		DebugMenuAddCmd("Cheats", "Spawn Vehicle", CustomCheats::SpawnCarTestCheat);
 		// Test spawning a ped
 		// DebugMenuAddCmd("Cheats", "Spawn Ped", CustomCheats::SpawnPedTest);
 
@@ -838,6 +840,15 @@ DebugMenuPopulate(void)
 		DebugMenuAddCmd("Cam", "Normal", []() { DebugCamMode = 0; });
 		DebugMenuAddCmd("Cam", "Reset Statics", ResetCamStatics);
 
+#ifdef CUSTOM_CODE
+
+		// Vehicle menu
+		DebugMenuAddCmd("Vehicle", "Lock Doors", CustomCheats::LockDoors);
+		DebugMenuAddCmd("Vehicle", "Unlock Doors", CustomCheats::UnlockDoors);
+		DebugMenuAddCmd("Vehicle", "Remove vehicle", VehicleFunctions::RemoveCurrentVehicleFromWorld);
+
+#endif //CUSTOM_CODE
+
 		CTweakVars::AddDBG("Debug");
 	}
 }
diff --git a/src/extras/functions/vehicle_functions.cpp b/src/extras/functions/vehicle_functions.cpp
index 8b9596e4..6d9b1736 100644
--- a/src/extras/functions/vehicle_functions.cpp
+++ b/src/extras/functions/vehicle_functions.cpp
@@ -73,14 +73,21 @@
 #include "test/scriptcommands_test.h"
 #endif // CUSTOM_CODE
 
-//
 
-// Taken idea from debug_functions.cpp
-// TODO Setup this with my own methods, mostly add a check to see if they are in a vehicle, if so remove it.
+/// <summary>
+/// Taken idea from debug_functions.cpp
+/// I have slightly modified this and now it has a few more features for my menu.
+/// This will delete the current vehicle, and warp the player into the vehicle if set
+/// </summary>
+/// <param name="id">The vehicle to spawn</param>
+/// <param name="deleteCurrentVehicle">Whether the current vehicle gets deleted or not.</param>
+/// <param name="warpIntoVehicle">Warp the player into the vehicle.</param>
 void
-VehicleFunctions::SpawnVehicle(int id)
+VehicleFunctions::SpawnVehicle(int id, bool deleteCurrentVehicle, bool warpIntoVehicle)
 {
 	CPlayerPed *pPed = FindPlayerPed();
+	// TODO Setup this to do something later, add toggle to debug menu for it.
+	bool chaosMode = false;
 
 	CustomCheats *customCheats = new CustomCheats();
 
@@ -119,11 +126,47 @@ VehicleFunctions::SpawnVehicle(int id)
 		else
 			v->SetPosition(ThePaths.m_pathNodes[node].GetPosition());
 
-		v->GetMatrix().GetPosition().z += 4.0f;
+		//v->GetMatrix().GetPosition().z += 4.0f;
+		v->GetMatrix().GetPosition().z += 1.0f;
 		v->SetOrientation(0.0f, 0.0f, 3.49f);
 		v->SetStatus(STATUS_ABANDONED);
 		v->m_nDoorLock = CARLOCK_UNLOCKED;
+
+		// Possible fix for the engine not being on
+		v->bEngineOn = true;
 		CWorld::Add(v);
+
+		// Remove the players current vehicle if enabled, and make the player exit the vehicle.
+		if(pPed->bInVehicle && deleteCurrentVehicle)
+		{
+			CVehicle *playerVeh = pPed->m_pMyVehicle;
+
+			// Wow, this just makes the car catch on fire after the player leaves it.
+			// Sometimes the bike dissappears, I guess because of the objective?
+			
+			// This makes the player exit the vehicle
+			// TODO Fix this to make the player warp out of the vehicle.
+			// pPed->SetObjective(OBJECTIVE_FLEE_CAR);
+
+			pPed->SetObjective(OBJECTIVE_LEAVE_CAR);
+
+			// Some extra chaos features
+			if (chaosMode) {
+				playerVeh->m_fHealth = 0;
+				// pPed->m_fHealth = 0;
+			}
+			
+			// Remove the vehicle from the world
+			VehicleFunctions::RemoveCurrentVehicleFromWorld();
+		}
+
+		// Warp the player into the new vehicle if enabled.
+		// This sometimes glitches out and the player will enter and exit the vehicle.
+		if(warpIntoVehicle)
+		{
+			pPed->SetObjective(OBJECTIVE_ENTER_CAR_AS_DRIVER, v);
+			pPed->WarpPedIntoCar(v);
+		}
 	}
 }
 
@@ -154,11 +197,9 @@ VehicleFunctions::RemoveCurrentVehicleFromWorld()
 	if(pPed->bInVehicle) {
 		CVehicle *playerVeh = pPed->m_pMyVehicle;
 
-		// This makes the player exit the vehicle
-		// TODO Fix this to make the player warp out of the vehicle.
-		//pPed->SetObjective(OBJECTIVE_FLEE_CAR);
 
-		pPed->SetObjective(OBJECTIVE_LEAVE_CAR);
+
+		//This idea came from COMMAND_DELETE_CAR in Script.cpp
 
 		CWorld::Remove(playerVeh);
 		CWorld::RemoveReferencesToDeletedObject(playerVeh);
@@ -260,6 +301,12 @@ VehicleFunctions::SpawnVehicle()
 		if(pPed->bInVehicle) {
 			CVehicle *playerVeh = pPed->m_pMyVehicle;
 
+			// This makes the player exit the vehicle
+			// TODO Fix this to make the player warp out of the vehicle.
+			// pPed->SetObjective(OBJECTIVE_FLEE_CAR);
+
+			 pPed->SetObjective(OBJECTIVE_LEAVE_CAR);
+
 			// TODO Figure out how to get vehicle model id from above, is it possible?
 			// TODO Test this
 			// if (CModelInfo::IsCarModel() {
diff --git a/src/extras/functions/vehicle_functions.h b/src/extras/functions/vehicle_functions.h
index a9c16309..a1ea637f 100644
--- a/src/extras/functions/vehicle_functions.h
+++ b/src/extras/functions/vehicle_functions.h
@@ -22,5 +22,6 @@ public:
 	static void ToggleVehicleInvincible(CVehicle *veh);
 	static void RemoveCurrentVehicleFromWorld();
 	static void RequestVehicleModel(int vehicleModel);
-	static void SpawnVehicle(int id);
+	// static void SpawnVehicle(int id);
+	static void SpawnVehicle(int id, bool deleteCurrentVehicle, bool warpIntoVehicle);
 };
diff --git a/src/extras/test/cheats/custom_cheats.cpp b/src/extras/test/cheats/custom_cheats.cpp
index e8d4c9cd..02919391 100644
--- a/src/extras/test/cheats/custom_cheats.cpp
+++ b/src/extras/test/cheats/custom_cheats.cpp
@@ -86,6 +86,11 @@
 // if are already in one.
 bool chaosMode = false;
 
+// Invincibility
+#ifdef INVINCIBLE_CHEAT
+CPlayerPed::bInvincibleCheat = false;
+#endif
+
 // TODO Figure out how to use the commands in the Script.cpp files.
 //
 // TODO Figure out how to implement lua scripting into this.
@@ -397,154 +402,14 @@ void
 // CustomCheats::SpawnCarTestCheat()
 CustomCheats::SpawnCarTestCheat()
 {
-	CPlayerPed *pPed = FindPlayerPed();
-	CVector pPedCoords = FindPlayerCoors();
-	CustomCheats *customCheats = new CustomCheats();
-
-	bool carSpawn = false;
-	bool bikeSpawn = true;
-	bool heliSpawn = false;
-	bool boatSpawn = false;
-
-	// PCJ 600 bike https://gtamods.com/wiki/List_of_vehicles_(VC)
-	// Get the vehicle model from my enum
-	int vehicleModel = VehicleModels::PCJ_600;
-	// Adapted from my cleo test in javascript
-	//
-	// This should remove everything around the area.
-	// CustomCheats::ClearItemsFromArea(10);
-	customCheats->ClearItemsFromArea(10);
-	// Original code:
-	// CWorld::ClearExcitingStuffFromArea(pPedCoords, 10, true);
-
-	// Request the model
-	VehicleFunctions::RequestVehicleModel(vehicleModel);
-
-
-
-	// Don't attempt to use CAutoMobile for a Bike, it crashes it.
-	// CAutomobile *vehicle = new CAutomobile(vehicleModel, RANDOM_VEHICLE);
-
-#ifdef _TEST
-
-	CBike *vehicle = new CBike(vehicleModel, RANDOM_VEHICLE);
-
-	//if(bikeSpawn) { CBike *vehicle = new CBike(vehicleModel, RANDOM_VEHICLE); }
-//// I wonder how to use this
-// switch (vehicle->m_vehType)
-//{
-
-//}
-
-// CBike *vehicle = new CBike(vehicleModel, RANDOM_VEHICLE);
-#else
-	CBike *vehicle = new CBike(vehicleModel, RANDOM_VEHICLE);
-#endif //_TEST1
-
-	if(vehicle != nil) {
-		// Add 2 to the z and y, so the vehicle doesn't crush the player.
-		// pPedCoords.z + 2;
-		// pPedCoords.y + 2;
-		vehicle->SetPosition(pPedCoords);
-
-		// Set the car to be able to be entered
-		vehicle->SetStatus(STATUS_ABANDONED);
-		vehicle->m_nDoorLock = CARLOCK_UNLOCKED;
-		// Possible fix for the engine not being on
-		vehicle->bEngineOn = true;
-
-		// TODO Test this on something.
-		// vehicle->bTyresDontBurst = true;
-
-#ifdef _TEST1
-		// Oops I honestly forgot I enabled these..
-		// if (bustTires)
-		//{
-		// vehicle->BurstTyre(0, false);
-		// vehicle->BurstTyre(1, false);
-		//}
-
-#endif // _TEST
-
-		// vehicle->
-
-		// Set the vehicle as owned by the player.
-		vehicle->bHasBeenOwnedByPlayer = true;
-
-		// This doesn't work like this.
-		//vehicle->CanPedExitCar(false);
-
-		// TODO Figure out what this is.
-		//vehicle->m_pCarFire;
-
-		// Add vehicle to the world
-		CWorld::Add(vehicle);
-
-		// TODO Remove current vehicle
-
-		if(pPed->bInVehicle) {
-			CVehicle *playerVeh = pPed->m_pMyVehicle;
-			
-
-
-			// Wow, this just makes the car catch on fire after the player leaves it.
-			// Sometimes the bike dissappears, I guess because of the objective?
-			
-			// Some extra chaos features
-			if (chaosMode) {
-				playerVeh->m_fHealth = 0;
-				// pPed->m_fHealth = 0;
-			}
-			
-			
-			// pPed->SetObjective(OBJECTIVE_LEAVE_CAR);
-			// This idea came from COMMAND_DELETE_CAR in Script.cpp
-			// This seems to work fine for removing the vehicle.
-			// CWorld::Remove(playerVeh);
-			// CWorld::RemoveReferencesToDeletedObject(playerVeh);
-			// Oops, this below just kills the player, why?
-			//delete playerVeh;
-
-			VehicleFunctions::RemoveCurrentVehicleFromWorld();
-
-			// Custom code for each method, could be useful for other stuff.
-			// switch(playerVeh->m_vehType) {
-			// case VEHICLE_TYPE_CAR:
-			//	break;
-			// case VEHICLE_TYPE_BIKE:
-			//	break;
-			// case VEHICLE_TYPE_BOAT:
-			//	break;
-			// case VEHICLE_TYPE_HELI:
-			//	break;
-			//// Were planes useable in VC or 3?
-			// case VEHICLE_TYPE_PLANE:
-			//	break;
-			// default:
-			//	break;
-			// }
-			// if (playerVeh->IsBike()) {
-		}
-	}
-
-	// Warp the player into the vehicle
-	// Taken from Script4.cpp
-	// Well this was needed, there must be a ton of these objectives.
-	pPed->SetObjective(OBJECTIVE_ENTER_CAR_AS_DRIVER, vehicle);
-	// Put the player in the vehicle
-	// pPed->WarpPedIntoCar(vehicle);
+	//int vehicleModel = VehicleModels::PCJ_600;
+	int vehicleModel = VehicleModels::CHEETAH;
+	// TODO Test this
+	// Well this seems to work, but the vehicle gets spawned into the air.
+	// If I can fix this, I'll remove the function from this file.
+	VehicleFunctions::SpawnVehicle(vehicleModel, true, true);
 }
 
-// Check if the model has loaded
-// if(!CStreaming::HasModelLoaded())
-//{
-//	CStreaming::RequestModel();
-//	CStreaming::LoadAllRequestedModels(false);
-//}
-//}
-
-// TODO Test this later
-
 void
 SetText()
 {
@@ -588,8 +453,24 @@ CustomCheats::InfiniteHealthCheat()
 	// I have no idea what the option below is for but it didn't work.
 	// CPed *pPed = FindPlayerPed();
 
+	
 	CPlayerPed *pPed = FindPlayerPed();
 
+// TODO Fix this to work.
+#ifdef INVINCIBLE_CHEAT
+	wchar *string;
+	if(pPed->bInvincibleCheat) 
+		string = TheText.Get("CHEATOF");
+
+	else 
+		string = TheText.Get("CHEAT1");
+	
+
+	CHud::SetHelpMessage(string, true);
+
+	FindPlayerPed()->bInvincibleCheat = !FindPlayerPed()->bInvincibleCheat;
+
+	#else
 	if(!pPed->bBulletProof && !pPed->bFireProof && !pPed->bCollisionProof && !pPed->bMeleeProof && !pPed->bOnlyDamagedByPlayer && !pPed->bExplosionProof &&
 	   pPed->m_bCanBeDamaged) {
 		pPed->bBulletProof = true;
@@ -612,6 +493,7 @@ CustomCheats::InfiniteHealthCheat()
 
 		CHud::SetHelpMessage(TheText.Get("CHEATOF"), true);
 	}
+#endif //_TEST2
 }
 
 void
diff --git a/src/peds/Ped.cpp b/src/peds/Ped.cpp
index fa1dff46..3833ebb8 100644
--- a/src/peds/Ped.cpp
+++ b/src/peds/Ped.cpp
@@ -7160,6 +7160,12 @@ CPed::FinishDieAnimCB(CAnimBlendAssociation *animAssoc, void *arg)
 void
 CPed::SetDead(void)
 {
+	// Add invincibility cheat from Extended Vice project
+#ifdef INVINCIBLE_CHEAT
+	if(IsPlayer() && FindPlayerPed()->bInvincibleCheat && m_fHealth > 0.0f) 
+		return;
+#endif
+
 	if (!RpAnimBlendClumpGetAssociation(GetClump(), ANIM_STD_DROWN))
 		bUsesCollision = false;
 
diff --git a/src/peds/PedFight.cpp b/src/peds/PedFight.cpp
index 9ea7cd4f..ce400a9d 100644
--- a/src/peds/PedFight.cpp
+++ b/src/peds/PedFight.cpp
@@ -2689,6 +2689,14 @@ CPed::InflictDamage(CEntity *damagedBy, eWeaponType method, float damage, ePedPi
 		++CWorld::Players[CWorld::PlayerInFocus].m_nHavocLevel;
 
 	if (player == this) {
+
+	// Make it to where the player cannot be attacked if they are invincible.
+	// From Extended Vice
+#ifdef INVINCIBLE_CHEAT
+		if(player->bInvincibleCheat) 
+			return false;
+#endif
+
 		if (!player->m_bCanBeDamaged)
 			return false;
 
diff --git a/src/peds/PlayerPed.h b/src/peds/PlayerPed.h
index 2dd4c09e..64c66bba 100644
--- a/src/peds/PlayerPed.h
+++ b/src/peds/PlayerPed.h
@@ -121,6 +121,12 @@ public:
 #endif
 
 	static const uint32 nSaveStructSize;
+
+#ifdef INVINCIBLE_CHEAT
+	static bool bInvincibleCheat;
+#endif
 };
 
+
+
 //VALIDATE_SIZE(CPlayerPed, 0x5F0);
diff --git a/src/text/Text.cpp b/src/text/Text.cpp
index 1369d1db..056b199e 100644
--- a/src/text/Text.cpp
+++ b/src/text/Text.cpp
@@ -36,7 +36,12 @@ CText::Load(void)
 
 	Unload();
 
+	// This should move the gxt files into ViceExtended\\TEXT
+#ifdef CUSTOM_CODE
+	CFileMgr::SetDir("ViceExtended\\TEXT");
+#else
 	CFileMgr::SetDir("TEXT");
+#endif
 	switch(FrontEndMenuManager.m_PrefsLanguage){
 	case CMenuManager::LANGUAGE_AMERICAN:
 		sprintf(filename, "AMERICAN.GXT");
-- 
2.45.1.windows.1

